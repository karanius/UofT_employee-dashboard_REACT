{"version":3,"sources":["components/header/header.component.jsx","components/search-input/search-input.component.jsx","components/row/row.component.jsx","components/employee-list/employee-list.component.jsx","components/middle/middle.component.jsx","components/footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","SerchInput","inputOnChangeHanlde","htmlFor","onChange","id","type","Row","name","email","phone","EmployeeList","inputValue","useState","order","setOrder","list","setList","useEffect","document","querySelector","addEventListener","classList","contains","add","remove","querySelectorAll","forEach","elem","a","sort","b","console","log","map","user","key","Middle","userList","setUserList","searchField","setSearchField","filteredList","setFilteredList","adjustScreen","footerHeight","offsetHeight","headerHeight","totalWindowHeight","window","innerHeight","style","height","MiddleHeight","inputHeight","fetch","then","res","json","removeEventListener","filteredUserList","filter","toLowerCase","includes","e","target","value","Footer","App","location","reload","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1abf3290.chunk.js","sourcesContent":["import React from 'react';\nimport './header.styles.scss';\n\nconst Header = () => {\n  return (\n    <header className=\"Header\">\n      EMPLOYEE DIRECTORY\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport './search-input.styles.scss';\n\nconst SerchInput = ({inputOnChangeHanlde}) => {\n  return(\n    <section className=\"input-wrapper\">\n      <label className=\"input-label\" htmlFor=\"search\" >Filter by name:</label>\n      <input onChange={inputOnChangeHanlde} className=\"input-itself\" id=\"search\" type=\"text\" />\n    </section>\n  )\n}\n\nexport default SerchInput","import React from 'react';\nimport './row.styles.scss';\n\nconst Row = ({name , email, phone}) => {\n\n  return (\n    <div className=\"Row-wrapper\">\n      <div className=\"row\">\n        {name}\n      </div>\n      <div className=\"row\">\n        {email} \n      </div>\n      <div className=\"row\">\n        {phone}\n      </div>\n    </div>\n  )\n}\n\nexport default Row;","import React,{useState,useEffect} from 'react';\nimport './employee-list.styles.scss';\n\nimport Row from '../row/row.component';\n\nconst EmployeeList = ({inputValue}) => {\n  \n  const [order , setOrder] = useState(null);\n  const [list , setList] = useState(null);\n\n  useEffect(()=>{\n\n    document.querySelector('.x').addEventListener('click', ()=>{\n      if (document.querySelector('.x').classList.contains(\"name-carrot-up\")){\n        document.querySelector('.x').classList.add(\"name-carrot-down\");\n        document.querySelector('.x').classList.remove(\"name-carrot-up\");\n        setList(inputValue)\n        setOrder('up')\n      } else {\n        document.querySelector('.x').classList.remove(\"name-carrot-down\");\n        document.querySelector('.x').classList.add(\"name-carrot-up\");\n        setList(inputValue)\n        setOrder('down')\n      }\n    })  \n    document.querySelectorAll('.y').forEach(elem=>{\n      elem.addEventListener('click',()=>{\n        document.querySelector('.x').classList.remove(\"name-carrot-down\");\n        document.querySelector('.x').classList.remove(\"name-carrot-up\");\n        setOrder(null)\n      })\n    })\n  },[])\n\n  useEffect(()=>{\n    if(inputValue){\n      setList(inputValue)\n    }\n  },[inputValue])\n  \n\n  useEffect(()=>{\n    let a;\n    if (inputValue){\n      if(order === 'down') {\n        a = inputValue.sort((a,b)=>{\n          if(a.name < b.name) { return -1; }\n          if(a.name > b.name) { return 1; }\n          return 0;\n        })\n      } else if (order === 'up'){\n        a = inputValue.sort((a,b)=>{\n          if(a.name > b.name) { return -1; }\n          if(a.name < b.name) { return 1; }\n          return 0;\n        })\n      } else if (order === null) {\n        a = inputValue\n      }\n      console.log(inputValue,a)\n      setList(a)\n    }\n  },[order])\n\n\n  return(\n    <div className=\"EmployeeList\">\n      <div className=\"carrot-wrapper\">\n        <div className=\"x carrot\">Name</div>\n        <div className=\"y carrot\">email</div>\n        <div className=\"y carrot\">phone</div>\n      </div>\n\n      {\n        list ?\n          list.map(user=>{\n            return <Row key={user.id} {...user} /> \n          })\n          : null\n      }\n\n    </div>\n  )\n}\n\nexport default EmployeeList;","import React,{useState , useEffect} from 'react';\nimport './middle.styles.scss';\n\nimport SerchInput from '../search-input/search-input.component.jsx';\nimport EmployeeList from '../employee-list/employee-list.component';\n\nconst Middle = () => {\n  \n  const [userList , setUserList] = useState();\n  const [searchField , setSearchField] = useState();\n  const [filteredList,setFilteredList] = useState()\n  // const [inputValue , setInputValue] = useState();\n\n  const adjustScreen = () => {\n    const footerHeight = document.querySelector('.Footer').offsetHeight;\n    const headerHeight = document.querySelector('.Header').offsetHeight;\n    const totalWindowHeight = window.innerHeight\n    document.querySelector('.Middle').style.height = (totalWindowHeight - footerHeight - headerHeight ) + 'px';\n\n    const MiddleHeight = document.querySelector('.Middle').offsetHeight;\n    const inputHeight = document.querySelector('.input-wrapper').offsetHeight;\n    document.querySelector('.EmployeeList').style.height = (MiddleHeight - inputHeight)  + 'px'\n  }\n\n  useEffect(()=>{\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res=>res.json())\n    .then(res=>setUserList(res))\n\n    adjustScreen()\n    window.addEventListener('resize',adjustScreen)\n    return ()=>{\n      window.removeEventListener('resize',adjustScreen)\n    }\n  },[])\n\n  const inputOnChangeHanlde = (e) => {\n    setSearchField(e.target.value)\n  }\n\n  useEffect(()=>{\n    if(userList){\n      setFilteredList(userList)\n    }\n  },[userList])\n\n\n  useEffect(()=>{\n    let filteredUserList\n    if(userList){\n      filteredUserList = userList.filter(user =>{\n        return user.name.toLowerCase().includes(searchField.toLowerCase())\n      })\n      setFilteredList(filteredUserList)\n    }\n  },[searchField])\n\n  return (\n    \n    <div className=\"Middle\">\n      <SerchInput inputOnChangeHanlde={inputOnChangeHanlde} />\n      <EmployeeList inputValue={filteredList} />\n    </div>\n  )\n}\n\n\nexport default Middle","import React from 'react';\nimport './footer.styles.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"Footer\">\n      Made By DevKavian\n    </footer>\n  )\n}\n\nexport default Footer","import React from 'react';\nimport './App.scss';\n\nimport Header from './components/header/header.component';\nimport Middle from './components/middle/middle.component'\nimport Footer from './components/footer/footer.component';\n\nfunction App() {\n  window.addEventListener('resize',()=>{\n    window.location.reload()\n  })\n  return (\n    <div className=\"App\">\n      <Header />\n      <Middle/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}